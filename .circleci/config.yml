version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  deploy-lambda:
    description: "Deploys a zip file"
    parameters:
      function-name:
        type: string
      function-handler:
        type: string
    steps:
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: AWS_ID_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          aws-region: AWS_REGION
      - run:
          name: Deploy new lambda
          command: |
            aws lambda update-function-code --region $AWS_REGION --function-name "<< parameters.function-name >>" --zip-file "fileb://$CIRCLE_WORKING_DIRECTORY/build/slackstorian.zip" --query "LastModified"
            aws lambda update-function-configuration --region $AWS_REGION --function-name "<< parameters.function-name >>" --handler "<< parameters.function-handler >>" --query "Handler"
  build-release-zip:
    description: "Makes a zip file from project"
    steps:
      - run:
          name: Create directory
          command: mkdir build
      - run:
          name: Package souce files
          command: |
            cp -r ./slackstorian ./build
            cp lambda.py build
      - run:
          name: Package dependencies
          command: |
            pipenv lock -r > requirements.txt
            pipenv run pip install -r requirements.txt --no-deps -t build
      - run:
          name: Create zip
          command: |
            cd build
            zip -r slackstorian.zip *
jobs:
  test:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: deps-1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run: pipenv sync --dev
      - run: mkdir test-reports
      - run: pipenv run python -m pytest --cov=slackstorian --duration=5 --junitxml=test-reports/junit.xml
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - save_cache:
          key: deps-1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/lib/python3.7/site-packages"
            - ~/.local/share/virtualenvs
  deploy-production:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - build-release-zip
      - deploy-lambda:
          function-name:    'arn:aws:lambda:eu-west-2:559789578064:function:slackstorian-production'
          function-handler: 'lambda.handler'
workflows:
  version: 2
  ci:
    jobs:
      - test
      - deploy-production:
          requires:
            - test
          filters:
            branches:
              only: master

